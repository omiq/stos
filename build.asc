10 rem Adventure boilerplate by Chris Garrett @retrogamecoders
20 rem =======================================================
30 :
40 rem init game
50 mode 1 : key off : cls
60 dim ROOMS$(10,10) : dim ROOMDESC$(100) : dim OBJECTS$(100,100)
70 gosub 890
80 :
90 rem initialize start room
100 X=5 : Y=5
110 :
120 rem ========================================
130 rem USER INPUT
140 rem ========================================
150 rem @usercommands
160 cls : locate 0,0 : room = (y * 10) + x : print "room: ",room: inverse on: print roomdesc$(room): inverse off: print "Available Exits:"
170 if val(ROOMS$(X,Y-1))>0 then print "> North"
180 if val(ROOMS$(X+1,Y))>0 then print "> East"
190 if val(ROOMS$(X-1,Y))>0 then print "> West"
200 if val(ROOMS$(X,Y+1))>0 then print "> South"
210 gosub 800
220 print "Command"; : input CMD$ : IN$=upper$(left$(CMD$,1))
230 sp=instr(CMD$," ") : rem Space between words
240 obj$=right$(CMD$,len(CMD$)-sp) : rem Specified Object
250 if IN$="N" and val(ROOMS$(X,Y-1))>0 then Y=Y-1
260 if IN$="E" and val(ROOMS$(X+1,Y))>0 then X=X+1
270 if IN$="W" and val(ROOMS$(X-1,Y))>0 then X=X-1
280 if IN$="S" and val(ROOMS$(X,Y+1))>0 then Y=Y+1
290 if IN$="G" then gosub 370 : rem get
300 if IN$="U" then gosub 480 : rem use
310 if IN$="D" then gosub 540 : rem drop
320 if IN$="A" then gosub 650 : rem attack
330 if IN$="I" then gosub 710 : rem inventory
340 if IN$="Q" then print "Goodbye!" : end
350 goto 150
360 :
370 rem @getobject
380 rem GET OBJECT
390 ofound=0
400 for ob=0 to 99
410 if upper$(objects$(ob,0))=upper$(obj$) then ofound=ob : objects$(ofound,1)="0" : rem zero = inventory
420 next ob
430 if ofound > 0 then print "You picked up: "+objects$(ofound,0)
440 if ofound = 0 then print obj$ + " not found"
450 wait key
460 return
470 :
480 rem @useobject
490 rem USE OBJECT user action
500 print obj$
510 wait key
520 return
530 :
540 rem @dropobject
550 rem DROP OBJECT user action
560 ofound=0
570 for ob=0 to 99
580 if upper$(objects$(ob,0))=upper$(obj$) then ofound=ob : objects$(ofound,1)=str$(room) : rem set to current room
590 next ob
600 if ofound > 0 then print "You dropped: "+objects$(ofound,0)
610 if ofound = 0 then print obj$ + " not found in your carried items"
620 wait key
630 return
640 :
650 rem @attack
660 rem ATTACK user action
670 print obj$
680 wait key
690 return
700 :
710 rem @inventory
720 rem INVENTORY user action
730 print "INVENTORY:"
740 for ob=1 to 100
750 if objects$(ob,1)="0" then print " . " + objects$(ob,0)
760 next ob
770 wait key
780 return
790 :
800 rem @objectsinroom
810 rem LOOKUP OBJECTS IN ROOM
820 objinroom$=""
830 for o=1 to 100
840 if val(OBJECTS$(o,1))=room then objinroom$=objinroom$ + " " + OBJECTS$(o,0)
850 next o
860 if objinroom$<>"" then print "OBJECTS VISIBLE:"+objinroom$
870 return
880 :
890 rem @loaddata
900 rem LOAD GAME DATA FROM FILE
910 locate 0,0
920 print "Starting, please wait"
930 :
940 rem MAP DATA
950 print "loading map"
960 open in #1,"map.asc"
970 for Y=0 to 9
980 input #1, ROOMS$(0,Y), ROOMS$(1,Y), ROOMS$(2,Y), ROOMS$(3,Y), ROOMS$(4,Y), ROOMS$(5,Y), ROOMS$(6,Y), ROOMS$(7,Y), ROOMS$(8,Y), ROOMS$(9,Y)
990 next Y
1000 close #1
1010 :
1020 rem ROOM DATA
1030 print "loading rooms"
1040 open in #1,"rooms.asc"
1050 rem room zero is the inventory
1060 for r=1 to 100
1070 input #1, desc$ : roomdesc$(r)=desc$
1080 next r
1090 close #1
1100 :
1110 rem OBJECTS in ROOMS
1120 print "loading objects"
1130 open in #1,"objects.asc"
1140 r=1
1150 repeat
1160 input #1, obj$,roomno$
1170 objects$(r,0)=obj$ : objects$(r,1)=roomno$
1180 inc r
1190 until eof(1)
1200 close #1
1210 :
1220 return
1230 :
1240 :
